local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Rayfield Example Window",
    Icon = 0,
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ShowText = "Rayfield",
    Theme = "Default",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

local MainTab = Window:CreateTab("Tab Example", nil)
local Section = MainTab:CreateSection("Farming")

local Button = MainTab:CreateButton({
    Name = "Sell all Fruit and plant",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(87, 3, 0)
            task.wait(0.1)
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Inventory"):FireServer()
        else
            warn("Could not teleport to sell: Character not found.")
        end
    end,
})

local Button = MainTab:CreateButton({
    Name = "Honey Machine",
    Callback = function()
        local args = {"MachineInteract"}
        game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("HoneyMachineService_RE"):FireServer(unpack(args))
    end,
})

local isHoneyShopOpen = false
local Button = MainTab:CreateButton({
    Name = "Honey Event Shop",
    Callback = function()
        local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
        local honeyEventShopUI = playerGui:FindFirstChild("HoneyEventShop_UI")
        if honeyEventShopUI then
            isHoneyShopOpen = not isHoneyShopOpen
            honeyEventShopUI.Enabled = isHoneyShopOpen
        else
            warn("HoneyEventShop_UI not found in PlayerGui.")
        end
    end,
})

local Label = MainTab:CreateLabel("Label Example", 4483362458, Color3.fromRGB(255, 255, 255), false)

local isRecipeSelection = false
local Button = MainTab:CreateButton({
    Name = "Crafting 2",
    Callback = function()
        local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
        local recipeSelectionUI = playerGui:FindFirstChild("RecipeSelection_UI")
        if recipeSelectionUI then
            isRecipeSelection = not isRecipeSelection
            recipeSelectionUI.Enabled = isRecipeSelection
        else
            warn("RecipeSelection_UI not found in PlayerGui.")
        end
    end,
})

local Button = MainTab:CreateButton({
    Name = "GearShop TP",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(-283, 3, -15)
        else
            warn("Could not teleport: Character not found.")
        end
    end,
})

-- TOGGLE MIS À JOUR QUI COMBINE L'ÉQUIPEMENT ET LA SOUMISSION
local isAutoSubmitting = false
local AutoSubmitToggle = MainTab:CreateToggle({
    Name = "Auto Equip & Submit", -- Nouveau nom pour refléter la nouvelle fonction
    Default = false,
    Callback = function(value)
        isAutoSubmitting = value
        if isAutoSubmitting then
            task.spawn(function()
                while isAutoSubmitting do
                    local player = game:GetService("Players").LocalPlayer
                    local backpack = player:FindFirstChild("Backpack")
                    local character = player.Character
                    local humanoid = character and character:FindFirstChildOfClass("Humanoid")

                    if backpack and humanoid then
                        for _, item in ipairs(backpack:GetChildren()) do
                            if not isAutoSubmitting then break end

                            if item:IsA("Tool") then
                                humanoid:EquipTool(item)
                                task.wait(0.1)

                                local args = {"SubmitHeldPlant"}
                                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("SummerHarvestRemoteEvent"):FireServer(unpack(args))
                                task.wait(0.2)
                            end
                        end
                    end
                    task.wait(1)
                end
            end)
        end
    end,
})

Rayfield:LoadConfiguration()
